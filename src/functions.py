from pandas_datareader import data as pdr
from datetime import datetime, timedelta
import numpy as np
from sklearn.neighbors import KNeighborsClassifier


def get_list():
    d = {}
    with open("data/info", 'r') as f:
        arr = f.read().split('\n')
        for st in arr:
            l = st.find('\t')
            ticker = st[:l]
            company = st[l + 1:]
            d[company] = ticker

    st_list = "–ò–ú–Ø –∫–æ–º–ø–∞–Ω–∏–∏: –¢–ò–ö–ï–†\n\n"
    for i in d:
        if i != '':
            st_list += ("‚ùóÔ∏è%s: %s\n" % (i, d[i]))
    return st_list


def get_d():
    d = {}
    with open("data/info", 'r') as f:
        arr = f.read().split('\n')
        for st in arr:
            l = st.find('\t')
            ticker = st[:l]
            company = st[l + 1:]
            d[company] = ticker

    return d


def get_prediction(ticker):
    start_date = (datetime.today() - timedelta(days=30)).date()
    end_date = datetime.today()
    df = pdr.get_data_yahoo(ticker, start_date, end_date).dropna()[['Open', 'High', 'Low', 'Close']]

    df['Open&Close'] = df.Open - df.Close
    df['High&Low'] = df.High - df.Low
    X = df.dropna()[['Open&Close', 'High&Low']]
    Y = np.where(df['Close'].shift(-1) > df['Close'], 1, -1)

    x_train, y_train, x_test, y_test = X.iloc[:-1], Y[:-1], X.iloc[-1], Y[-1]
    knn = KNeighborsClassifier(n_neighbors=3)

    knn.fit(X, Y)

    return knn.predict([x_test])


def pred_message(a):
    if a == -1:
        st = "–Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏, –∏–∑—É—á–∏–ª –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π, –º–æ–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≥–æ–≤–æ—Ä—è—Ç:\n" \
             "–í—Å–µ-—Ç–∞–∫–∏ —Å—Ç–æ–∏—Ç –ø—Ä–æ–¥–∞—Ç—å –∞–∫—Ü–∏–∏ —Å–µ–≥–æ–¥–Ω—è, –≤–µ–¥—å –µ—Å—Ç—å –æ—á–µ–≤–∏–¥–Ω–∞—è —Ç–µ–Ω–¥–µ—Ü–∏—è –Ω–∞ —Å–ø–∞–¥ —Ü–µ–Ωüìâ"
        return st
    if a == 1:
        st = "–Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏, –∏–∑—É—á–∏–ª –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π\n" \
             "–û–±–æ—Å–Ω–æ–≤–∞–Ω–Ω–æ –∑–∞—è–≤–ª—è—é: —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –∞–∫—Ü–∏–∏ –±—É–¥—É—Ç —Å—Ç–æ–∏—Ç –∑–∞–≤—Ç—Ä–∞ –¥–æ—Ä–æ–∂–µ, —Å—Ä–æ—á–Ω–æ –ø–æ–∫—É–ø–∞–π—Ç–µüìà"
        return st
